foreign [Music] tutorial on fitting a distribution or guessing a distribution so in our first video we saw an overview of how to perform the chi-square at goodness of a test in the second video we saw the performance of this goodness of the test for a uniform distribution now in this third video we would do the same thing for a poisson distribution so why in this third tutorial it is for two reasons the first one is that the uniform or tutorial was for continuous distribution so you could use the same approach for either um either a normal distribution or a gamma distribution so on and so forth there is a poisson is a discrete distribution right so when it comes to a discrete distribution there are a few ah few changes that you would have to do and we would be seeing those changes in this tutorial so let's get started so again I am going to load this data set known as data underscore poisson and then call my two basic packages which are going to be numpy and pandas so let us load this data set data underscore poisson so I have loaded the data set into the environment and if called it into my code so now what do I have I have a data set which has 100 observations and for those 100 observations each of these are the different values so five four four five five so on and so forth and a business context where poisson distribution can be used the most famous one is going to be the number of defects let's say you are going to produce a product and if there is even a single defect in the product you are going to call it Ascent effect right so I have produced a lot of let's say 200 products and out of those 100 have had defects and in each of those how many defects were found so five defects were found in the first first sample point the four defects was found in the second sample point four defects was formed in the third sample point so on and so forth now this is the data set that you have and for this data set let us first do a histogram right so if I plot a histogram it looks like it is going to be normally distributed it could be possible it could be a normal distribution why we are emphasizing on normal is that normal is something that you would very often see but when it comes to a defect it need not be normal right and this is where we would take the descriptive statistics comes into importance if I look at my descriptive statistics I have a mean of 4.9 and the standard deviation of 2.3 and what is the variance the variance is going to be 5.6 and only for a poisson will the mean and the variance be very very close to each other right so using my descriptive statistics I can actually come to a conclusion saying that when the mean and the variance are very very close or so close the mean is 4.9 and the variance is 5.6 I can actually say yes this is coming from a poisson distribution I would leave the pp plot and QQ plots for the poisson to be developed on your own so I would not go into that particular visualization in this tutorial please do develop the pp plot and QQ plot on your own and see how it happens I would like to focus on the statistical test and what are the changes that are going to happen over there so I am importing all my required packages for performing the statistical test I have also imported the package that you would be using for the QQ plot so please use the same for um for developing the QQ plot on your own for this particular code set the new package these are all the packages that were already present in the previous tutorial video the new package that we are going to import is going to be known as the poisson since we are going to check for a poisson distribution I have imported this poisson package from scipy dot stats okay so since my mean and variance are very close I am going to be considering that my population is going to be following a poisson and hence my null hypothesis is that a bigger button that's an error here so the null hypothesis is going to be that it's going to be a poisson and the alternative is that it does not come from a poisson right so that is going to be the null hypothesis the data follows a poisson distribution and the alternative is that the data does not follow a poisson distribution so let us do the same step that we did for a uniform right I have split this into bins and then I am developing The observed frequency for each of these bins this is not correct why because I cannot use this method for creating wins because the poisson distribution is discrete which means I cannot have an observation which is 0.99 to 2 I must say exactly one or two or three or four right so I cannot adopt this particular method of building for the poisson distribution I must use something else and what would I use I would basically start creating this new data frame called group dot data right it is an empty data frame and in this group.data what I am going to do is for every observed frequency value that I have I am going to count the number of times it has happened so one has happened three times two has happened 14 times 3 has happened 15 times so on and so forth so if I open my data set data Dot poisson if I open my data set put a filter on this observed frequency and fill rate let's say for 4. I am having 16 observations right and if I go back to my this thing 4 would be happening 16 times right so my frequency table is matching my data set that is available so one would have happened two times two would have happened 12 times 4 has happened 16 times and that is what we saw when we filter we see that there are 16 observations of 4 in my data set of 100 observations right so that is going to be my uh my frequency table the first step so I have got bins my bins are going to be 1 to 11 and The observed frequency are going to be 3 to 2. for each of these I need to compute the expected frequency and what is that the expected frequency for one observations is going to be nothing but the probability Mass function the pmf into the total number of observations in my sample which is going to be 100 right so what will I do that pmf will give me the probability of observing one given this sample with a Lambda of ah with a mean of 4.9 so that is going to be my probability Mass function so for each of these bins I must get the probability Mass function which is the poisson pmf so for this group data frame I am going to add a new column called poisson underscore pmf and that poisson underscore pmf is going to be computed using this package value which is going to be poisson poisson dot pmf I am going to take the K value from The observed frequency index and the mu value which is going to be the mean value of 4.9 as my mean and I am going to add that to my data frame right so the probability of observing one in this data frame is 0.03 probability of observing 2 is 0.09 probability of observing 3 is 0.14 so 1 and so forth correct so that is going to be the probability Mass function using this probability Mass function I need to compute the expected frequency which is nothing but this probability into the total number of observations that I have which is going to be 100 so the expected frequency is nothing but the probability Mass function in 200 so it is going to be 3.5 observations are going to be falling under one eight points of an observations that is going to be falling under 2 14.3 observations that are going to be falling under three so on and so forth a question may arise if this is an actual business context how can this be in decimals 3.58.7 4.3 right if I am going to observe the number of number of samples which have a defect of one how can it be 3.5 that could be a logical question this is where the word expected crumbs this is a theoretical value theoretically I can have three point five four point one five point one whatever in decimal points there I would not round off but the actual value The observed frequency will always be an integer value right so that is the difference between the observed frequency and expected frequency The observed frequency is the actual number of observations that fall yeah fall which have a defect of one the expected frequency is from the population how many values will I have to will I expect to have one defect so that can be in decimals okay now I have an observed frequency and I have an expected frequency I can perform my chi Square test using the same thing Chi Squared grouped observed frequency comma expected frequency right so if I perform this you will have an error that pops up and the error would say that the observed frequency and expected frequency do not match what does that mean so what does that mean my observed frequency has 100 values correct whereas my expected frequency has only 98 values because of this mismatch this test would not be performed in Python it will pop up this error known as the value error for Access slice and it is very logical there is a logical uh logical reason for this this 98 is coming because my expected frequency the sum of all of this is 98.78 and that into 100 is 98.78 observations right so that is the reason why this error is popping up I want you to find out a way the correct method to fix this problem for any given data set so tomorrow if you run the same thing for any other discrete probability function let us say you are doing a coin toss and you want to see whether the coin is truly uh truly unbiased or not right so it should follow a binomial distribution one and zero if you do that you would still end up with this error that the number of observed and the expected frequency are not matching and in that case how do you fix this problem the fix or the correct method to give for this problem has been discussed in the discourse please go have a look at it and um and Implement that here what I am going to do is if you actually implement the solution correctly the excuse me if you actually implement the solution correctly you should get a data frame that looks like this the grouped underscore DF that has been given to you that data frame would actually have the corrected value and the value that has been corrected would be this last value instead of 0.766 the last value would be 1.97 how do you make this correction think of it think of the logical reasoning for this and implement it in a tone and find it out right so that I am giving it to you as a homework because we have told you how to do this in the discourse we would also be telling you how to do this during the live sessions so in either one of these forums please pick up the correct technique and implement it in a tool since you are doing some programming before this we want to encourage you to do it on your own so please do that and once you do that you should end up with the data frame that looks like this so I have my bins 1 to 11. I have my absorbed frequencies for each of these bins and I would have the correct expected frequency for each of these bins now if I perform my Chi Squared goodness of fit test there'd be no problems I would get a Chi Squared value of 5.9 and a P value of 0.8 obviously since my P value is 0.8 at a level of significance of 5 percent 0.05 I would not reject the null I would do not reject the null would be the conclusion which means by parent distribution my defects are indeed following a poisson distribution in my production process the same way at a 95 level of significance if I do K minus P minus 1 my K is 10 buckets all right 1 to 11 is 10 buckets ah so 10 minus 1 minus 1 because I am only Computing the Lambda here so that is 2 so 10 minus 2 8 my um Chi Square tabulated value is going to be 16.9 and at 16.9 that is very very greater than 5.9 and hence I will not be rejecting my null hypothesis right so this is the tutorial on ah how to use python as a tool for narrowing down your possible contenders for for a distribution and then statistically verifying whether your hypothesis distribution and the actual parent distribution are matching or not matching using a chi-squared goodness of fit test so um please use these tutorials the codes and the data sets all the three data sets the uniform the poisson and the grouped underscore DF would be available to you for um for your use and for your further practice so please do the practice and meet you again in the next tutorial have a good day